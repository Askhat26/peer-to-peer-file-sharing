{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///D:/peer-to-peer-file-sharing/Frontend/my-app/src/app/context/StatusContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\ntype SpeedType = {\r\n  download: string;\r\n  upload: string;\r\n};\r\n\r\ntype StorageType = {\r\n  used: string;\r\n  free: string;\r\n};\r\n\r\ntype ConnectionStatus = 'connected' | 'disconnected' | 'connecting';\r\n\r\ninterface StatusContextType {\r\n  downloads: number;\r\n  setDownloads: React.Dispatch<React.SetStateAction<number>>;\r\n  uploads: number;\r\n  setUploads: React.Dispatch<React.SetStateAction<number>>;\r\n  peers: number;\r\n  setPeers: React.Dispatch<React.SetStateAction<number>>;\r\n  speed: SpeedType;\r\n  setSpeed: React.Dispatch<React.SetStateAction<SpeedType>>;\r\n  storage: StorageType;\r\n  setStorage: React.Dispatch<React.SetStateAction<StorageType>>;\r\n  connectionStatus: ConnectionStatus;\r\n  setConnectionStatus: React.Dispatch<React.SetStateAction<ConnectionStatus>>;\r\n}\r\n\r\nconst StatusContext = createContext<StatusContextType | undefined>(undefined);\r\n\r\nexport const StatusProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [downloads, setDownloads] = useState<number>(0);\r\n  const [uploads, setUploads] = useState<number>(0);\r\n  const [peers, setPeers] = useState<number>(0);\r\n  const [speed, setSpeed] = useState<SpeedType>({ download: '0 KB/s', upload: '0 KB/s' });\r\n  const [storage, setStorage] = useState<StorageType>({ used: '0 GB', free: '0 GB' });\r\n  const [connectionStatus, setConnectionStatus] = useState<ConnectionStatus>('connecting');\r\n\r\n  return (\r\n    <StatusContext.Provider value={{\r\n      downloads, setDownloads,\r\n      uploads, setUploads,\r\n      peers, setPeers,\r\n      speed, setSpeed,\r\n      storage, setStorage,\r\n      connectionStatus, setConnectionStatus\r\n    }}>\r\n      {children}\r\n    </StatusContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useStatus = () => {\r\n  const context = useContext(StatusContext);\r\n  if (!context) {\r\n    throw new Error('useStatus must be used within a StatusProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AA+BA,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAiC;AAE5D,MAAM,iBAA0D,CAAC,EAAE,QAAQ,EAAE;IAClF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa;QAAE,UAAU;QAAU,QAAQ;IAAS;IACrF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;QAAE,MAAM;QAAQ,MAAM;IAAO;IACjF,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAE3E,qBACE,8OAAC,cAAc,QAAQ;QAAC,OAAO;YAC7B;YAAW;YACX;YAAS;YACT;YAAO;YACP;YAAO;YACP;YAAS;YACT;YAAkB;QACpB;kBACG;;;;;;AAGP;AAEO,MAAM,YAAY;IACvB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}